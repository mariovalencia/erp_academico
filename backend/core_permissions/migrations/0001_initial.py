# Generated by Django 5.2.7 on 2025-10-23 18:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='department name')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='department code')),
            ],
            options={
                'db_table': 'core_departments_temp',
            },
        ),
        migrations.CreateModel(
            name='PermissionModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='module name')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='module code')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('icon', models.CharField(blank=True, max_length=50, verbose_name='icon')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'permission module',
                'verbose_name_plural': 'permission modules',
                'db_table': 'core_permission_modules',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RoleTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='template name')),
                ('template_type', models.CharField(choices=[('university', 'University'), ('hospital', 'Hospital'), ('ecommerce', 'E-commerce'), ('project', 'Project Management'), ('custom', 'Custom')], max_length=20, verbose_name='template type')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'role template',
                'verbose_name_plural': 'role templates',
                'db_table': 'core_role_templates',
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GranularPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('functionality', models.CharField(max_length=100, verbose_name='functionality')),
                ('functionality_code', models.CharField(max_length=50, verbose_name='functionality code')),
                ('action', models.CharField(choices=[('view', 'View'), ('create', 'Create'), ('edit', 'Edit'), ('delete', 'Delete'), ('export', 'Export'), ('import', 'Import'), ('approve', 'Approve'), ('reject', 'Reject'), ('manage', 'Manage')], max_length=20, verbose_name='action')),
                ('scope', models.CharField(choices=[('all', 'All'), ('department', 'My Department'), ('own', 'Own Only'), ('custom', 'Custom')], max_length=20, verbose_name='scope')),
                ('name', models.CharField(max_length=200, verbose_name='permission name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_dangerous', models.BooleanField(default=False, verbose_name='dangerous action')),
                ('requires_approval', models.BooleanField(default=False, verbose_name='requires approval')),
                ('permission_code', models.CharField(help_text='Formato: module.functionality.action.scope', max_length=100, unique=True, verbose_name='permission code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='core_permissions.permissionmodule')),
            ],
            options={
                'verbose_name': 'granular permission',
                'verbose_name_plural': 'granular permissions',
                'db_table': 'core_granular_permissions',
                'ordering': ['module', 'functionality', 'action'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='role name')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='role code')),
                ('role_type', models.CharField(choices=[('system', 'System Role'), ('business', 'Business Role'), ('custom', 'Custom Role')], default='business', max_length=20, verbose_name='role type')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_super_admin', models.BooleanField(default=False, verbose_name='super admin role')),
                ('auto_assign_to_new_users', models.BooleanField(default=False, verbose_name='auto assign to new users')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('parent_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_roles', to='core_permissions.role')),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
                'db_table': 'core_roles',
                'ordering': ['role_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_temporary', models.BooleanField(default=False, verbose_name='temporary')),
                ('valid_from', models.DateTimeField(blank=True, null=True, verbose_name='valid from')),
                ('valid_until', models.DateTimeField(blank=True, null=True, verbose_name='valid until')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='assigned at')),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_permissions', to=settings.AUTH_USER_MODEL)),
                ('department_filter', models.ForeignKey(blank=True, help_text='Aplicar permiso solo a este departamento', null=True, on_delete=django.db.models.deletion.CASCADE, to='core_permissions.department')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_permissions.granularpermission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_permissions.role')),
            ],
            options={
                'verbose_name': 'role permission',
                'verbose_name_plural': 'role permissions',
                'db_table': 'core_role_permissions',
            },
        ),
        migrations.AddField(
            model_name='role',
            name='permissions',
            field=models.ManyToManyField(blank=True, related_name='roles', through='core_permissions.RolePermission', to='core_permissions.granularpermission'),
        ),
        migrations.CreateModel(
            name='TemplateRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_required', models.BooleanField(default=True, verbose_name='required')),
                ('is_temporary', models.BooleanField(default=False, verbose_name='temporary')),
                ('valid_days', models.PositiveIntegerField(blank=True, help_text='Número de días que el rol será válido (solo para temporales)', null=True, verbose_name='valid days')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_permissions.role')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_permissions.roletemplate')),
            ],
            options={
                'verbose_name': 'template role',
                'verbose_name_plural': 'template roles',
                'db_table': 'core_template_roles',
                'ordering': ['template', 'order'],
            },
        ),
        migrations.AddField(
            model_name='roletemplate',
            name='roles',
            field=models.ManyToManyField(related_name='templates', through='core_permissions.TemplateRole', to='core_permissions.role'),
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_temporary', models.BooleanField(default=False, verbose_name='temporary')),
                ('valid_from', models.DateTimeField(blank=True, null=True, verbose_name='valid from')),
                ('valid_until', models.DateTimeField(blank=True, null=True, verbose_name='valid until')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='assigned at')),
                ('notes', models.TextField(blank=True, verbose_name='assignment notes')),
                ('assigned_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, help_text='Departamento específico para este rol', null=True, on_delete=django.db.models.deletion.CASCADE, to='core_permissions.department')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_assignments', to='core_permissions.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user role',
                'verbose_name_plural': 'user roles',
                'db_table': 'core_user_roles',
            },
        ),
        migrations.AddIndex(
            model_name='granularpermission',
            index=models.Index(fields=['module', 'functionality'], name='core_granul_module__4da315_idx'),
        ),
        migrations.AddIndex(
            model_name='granularpermission',
            index=models.Index(fields=['permission_code'], name='core_granul_permiss_8d571c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rolepermission',
            unique_together={('role', 'permission', 'department_filter')},
        ),
        migrations.AlterUniqueTogether(
            name='templaterole',
            unique_together={('template', 'role')},
        ),
        migrations.AlterUniqueTogether(
            name='roletemplate',
            unique_together={('name', 'template_type')},
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['user', 'role'], name='core_user_r_user_id_540b69_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['valid_until'], name='core_user_r_valid_u_f8a7f7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'role', 'department')},
        ),
    ]
