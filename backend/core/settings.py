"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env_path = BASE_DIR / '.env.backend'
if env_path.exists():
    load_dotenv(dotenv_path=env_path)
    print("‚úÖ .env.backend cargado correctamente desde:", env_path)
else:
    print("‚ùå No se encontr√≥ .env en:", env_path)

# Debug: Verificar variables
print("GOOGLE_CLIENT_ID:", os.getenv('GOOGLE_CLIENT_ID', 'NO_CONFIGURADO'))
print("GOOGLE_CLIENT_SECRET existe:", bool(os.getenv('GOOGLE_CLIENT_SECRET')))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-l1o*+c-sxo_l9oveur-ucp-fw_l8b@_-brq9-2*fn-*c_)%y-h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Modelo de usuario personalizado
AUTH_USER_MODEL = 'core_users.CustomUser'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    'authentication',
    'core_audit',
    'core_organization',
    'core_permissions',
    'core_users',

]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB', 'erp_dev'),
        'USER': os.getenv('POSTGRES_USER', 'erp_user'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD', 'erp_password'),
        'HOST': os.getenv('POSTGRES_HOST', 'database'),
        'PORT': os.getenv('POSTGRES_PORT', '5432'),
    }
}

# Configuraci√≥n de REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # üî• PRIMARIO
        'rest_framework.authentication.SessionAuthentication',        # üî• PARA ADMIN DJANGO
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '100/day',      # üî• SEGURIDAD: L√≠mite para usuarios an√≥nimos
        'user': '1000/day'      # üî• SEGURIDAD: L√≠mite para usuarios autenticados
    }
}

# Configuraci√≥n avanzada de JWT para m√°xima seguridad
from datetime import timedelta

SIMPLE_JWT = {
    # üî• TIEMPOS DE EXPIRACI√ìN SEGUROS
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),           # Token corto para mayor seguridad
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),              # Refresh token v√°lido por 1 d√≠a
    'ROTATE_REFRESH_TOKENS': True,                           # üî• Nuevo refresh token en cada refresh
    'BLACKLIST_AFTER_ROTATION': True,                        # üî• Previene reuso de refresh tokens
    'UPDATE_LAST_LOGIN': True,                               # Auditor√≠a de √∫ltimo login
    
    # üî• ALGORITMOS DE SEGURIDAD
    'ALGORITHM': 'HS256',                                    # Algoritmo seguro
    'SIGNING_KEY': SECRET_KEY,                               # Usa la SECRET_KEY de Django
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    
    # üî• CONFIGURACI√ìN DE HEADERS
    'AUTH_HEADER_TYPES': ('Bearer',),                        # Standard industry
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    
    # üî• CONFIGURACI√ìN DE CLAIMS
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'JTI_CLAIM': 'jti',                                      # Identificador √∫nico del token
    
    # üî• MANEJO DE ERRORES
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

CORS_ALLOWED_ORIGINS = [
    "http://localhost:4200",
    "http://127.0.0.1:4200",
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]

CORS_ALLOW_CREDENTIALS = True

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

# Tiempo de cach√© para permisos (segundos)
PERMISSION_CACHE_TIMEOUT = 300  # 5 minutos